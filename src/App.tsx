import logo from "./logo.svg";
import "./App.css";
import { FirebaseOptions, initializeApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";
import Login from "./features/login/Login";
import AppBar from "@mui/material/AppBar";
import Container from "@mui/system/Container";
import Toolbar from "@mui/material/Toolbar";
import Button from "@mui/material/Button";
import Box from "@mui/material/Box";
import IconButton from "@mui/material/IconButton";
import Typography from "@mui/material/Typography";
import MenuIcon from "@mui/icons-material/Menu";
import { useState } from "react";
import Menu from "@mui/material/Menu";
import MenuItem from "@mui/material/MenuItem";
import Tooltip from "@mui/material/Tooltip";
import Avatar from "@mui/material/Avatar";
import SvgIcon from "@mui/material/SvgIcon";
import { Route, Routes, useNavigate } from "react-router-dom";
import TermsOfService from "./features/terms-of-service/TermsOfService";
import PrivacyPolicy from "./features/privacy-policy/PrivacyPolicy";
import Broken from "./features/broken/Broken";
import User from "./features/user/User";
import * as serviceWorkerRegistration from "./serviceWorkerRegistration";
import { getAuth } from "firebase/auth";
import { Md5 } from "md5-typescript";
import SodaSpots from "./features/soda-spots/SodaSpots";
import { initializeAppCheck, ReCaptchaV3Provider } from "firebase/app-check";
import Snackbar from "@mui/material/Snackbar";
import CloseIcon from "@mui/icons-material/Close";

const firebaseConfig: FirebaseOptions = {
  apiKey: "AIzaSyA_nQdMwa1kKXPjVtoSkZKlf2rxfctnRF8",
  authDomain: "tokyo-hold-352402.firebaseapp.com",
  projectId: "tokyo-hold-352402",
  storageBucket: "tokyo-hold-352402.appspot.com",
  messagingSenderId: "257128045567",
  appId: "1:257128045567:web:436ef5204f643916bd25ca",
  measurementId: "G-JM5LYE3H3J",
};
const firebaseApp = initializeApp(firebaseConfig);
getAnalytics(firebaseApp);
declare global {
  interface Window {
    FIREBASE_APPCHECK_DEBUG_TOKEN: string;
  }
}
if (process.env.NODE_ENV === "development" || process.env.NODE_ENV === "test") {
  // eslint-disable-next-line no-restricted-globals
  self.FIREBASE_APPCHECK_DEBUG_TOKEN = process.env
    .REACT_APP_RECAPTCHA_KEY as string;
}
initializeAppCheck(firebaseApp, {
  provider: new ReCaptchaV3Provider(
    process.env.REACT_APP_RECAPTCHA_KEY as string
  ),
  isTokenAutoRefreshEnabled: true,
});

function App() {
  const navigate = useNavigate();
  const [message, setMessage] = useState<string>("");
  const pages = [
    {
      label: "Sodas",
      handler: () => {
        handleCloseNavMenu();
        navigate("sodas");
      },
    },
    {
      label: "Soda Spots",
      handler: () => {
        handleCloseNavMenu();
        navigate("soda-spots");
      },
    },
  ];
  const [isSignedIn, setIsSignedIn] = useState(false);
  const [anchorElNav, setAnchorElNav] = useState<null | HTMLElement>(null);
  const [anchorElUser, setAnchorElUser] = useState<null | HTMLElement>(null);
  const auth = getAuth(firebaseApp);
  const user = auth.currentUser;
  const settings = [
    {
      label: "Account",
      handler: () => {
        handleCloseUserMenu();
        navigate("user");
      },
    },
    {
      label: "Logout",
      handler: () => {
        auth.signOut().then(() => {
          handleCloseUserMenu();
          setIsSignedIn(false);
        });
      },
    },
  ];
  const url =
    user?.photoURL || user?.email
      ? `https://www.gravatar.com/avatar/${Md5.init(user?.email)}`
      : "";
  // If you want your app to work offline and load faster, you can change
  // unregister() to register() below. Note this comes with some pitfalls.
  // Learn more about service workers: https://cra.link/PWA
  serviceWorkerRegistration.register({
    onSuccess: (_registration) => {
      setMessage("The app is now available offline.");
    },
    onUpdate: (_registration) => {
      setMessage(
        "The app has been updated and you'll run the new version when all tabs running the app close."
      );
    },
  });

  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorElNav(event.currentTarget);
  };
  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorElUser(event.currentTarget);
  };

  const handleCloseNavMenu = () => {
    setAnchorElNav(null);
  };

  const handleCloseUserMenu = () => {
    setAnchorElUser(null);
  };
  const version = process.env.REACT_APP_VERSION;
  return (
    <Box sx={{ flexGrow: 1 }}>
      <AppBar position="static">
        <Container maxWidth="xl">
          <Toolbar disableGutters>
            <SvgIcon sx={{ display: { xs: "none", md: "flex" }, mr: 1 }}>
              <path d="M 9.125 0.36328125 C 8.930922 0.3546431 8.734678 0.44542615 8.6855469 0.70898438 C 8.4317473 0.36402506 7.7708 0.67461844 7.8125 1.4667969 C 7.3967853 0.49893491 7.104291 1.1440993 6.9453125 1.5566406 C 6.8524441 1.5473859 6.7565642 1.5566964 6.6660156 1.5917969 C 6.5106609 1.4455672 6.3181565 1.2025467 6.171875 1.1503906 C 5.9993754 1.0889908 5.7457527 1.0692033 5.5644531 1.0957031 C 5.3582535 1.1257031 5.0679215 1.5002154 4.9199219 1.3535156 C 4.8440221 1.2784158 5.0985281 1.1159842 5.0488281 1.0214844 C 4.8449285 0.63481512 4.0661054 0.69350312 3.6289062 0.68945312 C 3.4706066 0.68798314 3.218281 0.68231149 3.1132812 0.80078125 C 2.9917816 0.93787097 3.1891934 1.2798035 3.0585938 1.4082031 C 2.951894 1.5132029 2.7030465 1.3995125 2.5605469 1.4453125 C 2.497347 1.4655875 2.4223367 1.4889387 2.34375 1.515625 C 2.2651633 1.5423113 2.1828042 1.5730891 2.1074219 1.609375 C 2.0320395 1.6456609 1.963743 1.6872544 1.9101562 1.7363281 C 1.8833629 1.760865 1.8596555 1.7861215 1.8417969 1.8144531 C 1.8239382 1.8427848 1.8112875 1.8737251 1.8046875 1.90625 C 1.7980875 1.9387624 1.8034586 1.9708139 1.8164062 2.0019531 C 1.8293539 2.0330923 1.85023 2.0636461 1.8769531 2.09375 C 2.0372921 2.2743733 2.3932905 2.4390753 2.3222656 2.625 C 2.3154531 2.6428625 2.3056358 2.6566136 2.2929688 2.6679688 C 2.2042992 2.7474549 1.9853934 2.6859876 1.8242188 2.734375 C 1.639919 2.7896748 1.5836938 3.2201473 1.6210938 3.4355469 C 1.6420936 3.5565467 1.7418283 3.7394783 1.8613281 3.7675781 C 1.9889279 3.7976781 2.1343471 3.4993533 2.2480469 3.5644531 C 2.4497465 3.6800529 2.2796564 4.1054912 2.2851562 4.3378906 C 2.2926562 4.65289 2.3440562 5.0791725 2.2851562 5.3886719 C 2.2064564 5.8031711 1.6802604 6.2999606 2.1933594 6.8808594 C 1.90846 6.9375592 1.648251 7.3951512 2.15625 7.96875 C 1.7708308 7.8025504 1.0049548 7.7438598 0.921875 8.0058594 C 0.8198952 8.3277588 0.84928816 8.7273752 1.1796875 8.796875 C 1.3853871 8.840075 1.5981879 8.998774 1.8046875 8.484375 C 1.8115875 8.7455744 1.761494 9.0591471 1.9335938 9.1855469 C 2.0781337 9.2916523 2.3393872 9.2943691 2.5566406 9.2285156 C 2.5465047 9.453802 2.5347285 9.679997 2.5136719 9.9042969 C 2.4712551 10.356226 2.4033439 10.805522 2.2929688 11.251953 C 2.2377812 11.475169 2.1718524 11.696502 2.09375 11.917969 C 2.0546988 12.028696 2.0123175 12.139751 1.9667969 12.25 C 1.9124879 12.67521 1.7610549 13.096625 1.6484375 13.515625 C 1.592179 13.725058 1.5446927 13.934642 1.5253906 14.142578 C 1.5205048 14.195212 1.5187175 14.246288 1.5175781 14.298828 C 1.5140321 14.454538 1.5274112 14.608797 1.5664062 14.763672 C 1.6295036 14.789248 1.6945138 14.813413 1.7597656 14.835938 C 1.9555212 14.903512 2.1600842 14.958527 2.3710938 15.003906 C 2.6524399 15.064412 2.94464 15.109068 3.2402344 15.146484 C 3.8314787 15.221554 4.4361649 15.268556 4.9960938 15.363281 L 6.34375 15.435547 C 7.6390559 15.451744 8.93726 15.390366 10.238281 15.199219 C 10.424204 15.171871 10.610793 15.142213 10.796875 15.109375 C 10.91749 15.077127 11.035056 15.04918 11.148438 15.023438 C 11.262401 14.997647 11.374418 14.973877 11.484375 14.951172 C 11.704242 14.905599 11.919027 14.862903 12.142578 14.808594 C 12.17689 14.801016 12.207773 14.7872 12.234375 14.769531 C 12.314181 14.716525 12.359903 14.623273 12.376953 14.525391 C 12.404108 14.412457 12.410159 14.297494 12.402344 14.181641 C 12.394529 14.065787 12.372846 13.94949 12.341797 13.832031 C 12.310748 13.714572 12.271063 13.596264 12.228516 13.478516 C 12.185968 13.360767 12.139967 13.243675 12.097656 13.126953 C 12.055391 13.010252 12.016624 12.893658 11.986328 12.779297 C 11.895313 12.436156 11.88531 12.106977 12.113281 11.808594 C 12.502074 11.502103 13.002536 11.372632 13.445312 11.199219 C 13.546119 11.159738 13.645656 11.118988 13.738281 11.072266 C 14.037962 10.9211 14.284429 10.71822 14.408203 10.375 C 14.452408 9.6591962 14.482751 8.9403715 14.480469 8.2226562 C 14.479739 7.9840337 14.475407 7.7439198 14.466797 7.5058594 C 14.466773 7.5052092 14.466821 7.5045564 14.466797 7.5039062 C 14.466324 7.4908677 14.465342 7.47788 14.464844 7.4648438 C 14.447884 7.0241933 14.414243 6.5851812 14.363281 6.1484375 C 14.360556 6.1250859 14.360257 6.1014618 14.357422 6.078125 C 14.333671 5.8822274 14.303449 5.6869067 14.271484 5.4921875 C 14.245664 5.3351179 14.219126 5.1776609 14.1875 5.0214844 C 14.163851 4.9046751 14.13843 4.7881235 14.111328 4.671875 C 14.092273 4.6211297 14.069072 4.5719497 14.042969 4.5273438 C 14.042503 4.5265519 14.041484 4.5261807 14.041016 4.5253906 C 14.014844 4.4809464 13.985479 4.4392817 13.953125 4.4003906 C 13.952536 4.3996857 13.951763 4.3991407 13.951172 4.3984375 C 13.918316 4.3593577 13.882024 4.3230738 13.84375 4.2890625 C 13.805574 4.2550725 13.765393 4.2228664 13.722656 4.1933594 C 13.722208 4.1930507 13.721151 4.1936676 13.720703 4.1933594 C 13.634293 4.1338406 13.541157 4.08188 13.441406 4.0371094 C 13.341656 3.9923387 13.236951 3.9546543 13.130859 3.9199219 C 13.090241 3.9045148 13.048382 3.8910543 13.007812 3.8808594 C 13.007182 3.880702 13.00649 3.8810155 13.005859 3.8808594 C 12.965335 3.870746 12.925219 3.8630019 12.884766 3.8574219 C 12.880936 3.8568998 12.876876 3.8579067 12.873047 3.8574219 C 12.629831 3.8262618 12.388227 3.8688845 12.150391 3.9160156 C 11.989727 3.9478537 11.830243 3.9812344 11.673828 3.9941406 C 11.556517 4.0038203 11.442333 4.0011774 11.328125 3.9785156 C 11.327519 3.9783954 11.326778 3.9786371 11.326172 3.9785156 C 11.288091 3.9709604 11.25057 3.9617435 11.212891 3.9492188 C 11.212891 3.8731412 11.216568 3.7854635 11.214844 3.6953125 C 11.214608 3.6830486 11.213315 3.6705488 11.212891 3.6582031 C 11.211832 3.6270957 11.209692 3.5956113 11.207031 3.5644531 C 11.206865 3.5625059 11.207205 3.5605398 11.207031 3.5585938 C 11.206856 3.5566547 11.207214 3.554672 11.207031 3.5527344 C 11.203234 3.5120393 11.197294 3.4728853 11.189453 3.4335938 C 11.188794 3.4302887 11.188193 3.4271174 11.1875 3.4238281 C 11.326135 3.3462889 11.403843 3.1761049 11.679688 3.1347656 C 12.047686 3.0794658 12.083312 2.4065002 11.570312 2.5 C 11.787312 2.3328004 12.051562 1.7740742 11.726562 1.421875 C 11.419564 1.0675758 11.007703 0.8860506 10.595703 1.1875 C 10.677703 0.91452054 10.02402 0.31113334 9.5449219 0.7265625 C 9.6211404 0.54884661 9.3745289 0.37438744 9.125 0.36328125 z M 2.9863281 2.8808594 C 2.9895463 2.8842244 2.9927925 2.8873067 2.9960938 2.890625 C 2.9752773 2.8965377 2.9605709 2.8992786 2.9414062 2.9042969 C 2.9558275 2.8960538 2.9709335 2.8882523 2.9863281 2.8808594 z M 12 5.4765625 C 12.04431 5.4777202 12.089043 5.4835075 12.132812 5.4902344 C 12.135362 5.4906262 12.138079 5.4898227 12.140625 5.4902344 C 12.14718 5.4912956 12.153623 5.4929465 12.160156 5.4941406 C 12.187882 5.4992023 12.214948 5.5061331 12.242188 5.5136719 C 12.259249 5.5183961 12.276149 5.5235536 12.292969 5.5292969 C 12.332136 5.5426804 12.370723 5.5569702 12.408203 5.5761719 C 12.453673 5.6140618 12.480463 5.6408171 12.529297 5.703125 C 12.576764 5.8579474 12.621968 6.0297067 12.664062 6.2128906 C 12.706169 6.3960534 12.744275 6.5914552 12.779297 6.7910156 C 12.849341 7.1901364 12.904182 7.6088974 12.935547 8.0019531 C 12.95907 8.2967449 12.969864 8.5779093 12.964844 8.8222656 C 12.959824 9.066622 12.937817 9.2741197 12.898438 9.4277344 C 12.898295 9.4282945 12.898581 9.4291289 12.898438 9.4296875 C 12.872248 9.5311098 12.838316 9.6094056 12.794922 9.65625 C 12.66357 9.7973901 12.542334 9.8979887 12.419922 9.9648438 C 12.29751 10.031699 12.172961 10.064865 12.037109 10.072266 C 11.946542 10.077199 11.850923 10.070685 11.746094 10.054688 L 11.496094 9.9277344 C 11.496094 9.9277344 11.475855 9.8965614 11.453125 9.8359375 C 11.429128 9.5094523 11.3805 9.1653634 11.328125 8.8125 C 11.275829 8.4602984 11.219807 8.0990738 11.181641 7.7382812 C 11.181572 7.7376325 11.181709 7.7369769 11.181641 7.7363281 C 11.162623 7.5562597 11.148191 7.376172 11.140625 7.1972656 C 11.140598 7.1966153 11.140652 7.1959628 11.140625 7.1953125 C 11.136854 7.1055411 11.134652 7.0167964 11.134766 6.9277344 C 11.134883 6.8386623 11.135958 6.7501937 11.140625 6.6621094 C 11.149952 6.4859583 11.169649 6.3111673 11.201172 6.140625 C 11.232699 5.9700725 11.276892 5.8033413 11.335938 5.640625 C 11.37682 5.6189028 11.420433 5.6002822 11.464844 5.5820312 C 11.490367 5.5715422 11.516514 5.5618812 11.542969 5.5527344 C 11.566883 5.544473 11.590695 5.5363421 11.615234 5.5292969 C 11.638461 5.5226178 11.661868 5.5172238 11.685547 5.5117188 C 11.717835 5.5042401 11.750298 5.49728 11.783203 5.4921875 C 11.801453 5.4893492 11.81952 5.4864264 11.837891 5.484375 C 11.891613 5.4784241 11.945937 5.4751499 12 5.4765625 z " />
            </SvgIcon>
            <Typography
              variant="h6"
              noWrap
              component="a"
              href="/"
              sx={{
                mr: 2,
                display: { xs: "none", md: "flex" },
                fontFamily: "monospace",
                fontWeight: 700,
                letterSpacing: ".3rem",
                color: "inherit",
                textDecoration: "none",
              }}
            >
              Simply Fizzed
            </Typography>

            <Box sx={{ flexGrow: 1, display: { xs: "flex", md: "none" } }}>
              <IconButton
                size="large"
                aria-label="account of current user"
                aria-controls="menu-appbar"
                aria-haspopup="true"
                onClick={handleOpenNavMenu}
                color="inherit"
              >
                <MenuIcon />
              </IconButton>
              <Menu
                id="menu-appbar"
                anchorEl={anchorElNav}
                anchorOrigin={{
                  vertical: "bottom",
                  horizontal: "left",
                }}
                keepMounted
                transformOrigin={{
                  vertical: "top",
                  horizontal: "left",
                }}
                open={Boolean(anchorElNav)}
                onClose={handleCloseNavMenu}
                sx={{
                  display: { xs: "block", md: "none" },
                }}
              >
                {pages.map((page) => (
                  <MenuItem key={page.label} onClick={page.handler}>
                    <Typography textAlign="center">{page.label}</Typography>
                  </MenuItem>
                ))}
              </Menu>
            </Box>
            <SvgIcon sx={{ display: { xs: "flex", md: "none" }, mr: 1 }}>
              <path d="M 9.125 0.36328125 C 8.930922 0.3546431 8.734678 0.44542615 8.6855469 0.70898438 C 8.4317473 0.36402506 7.7708 0.67461844 7.8125 1.4667969 C 7.3967853 0.49893491 7.104291 1.1440993 6.9453125 1.5566406 C 6.8524441 1.5473859 6.7565642 1.5566964 6.6660156 1.5917969 C 6.5106609 1.4455672 6.3181565 1.2025467 6.171875 1.1503906 C 5.9993754 1.0889908 5.7457527 1.0692033 5.5644531 1.0957031 C 5.3582535 1.1257031 5.0679215 1.5002154 4.9199219 1.3535156 C 4.8440221 1.2784158 5.0985281 1.1159842 5.0488281 1.0214844 C 4.8449285 0.63481512 4.0661054 0.69350312 3.6289062 0.68945312 C 3.4706066 0.68798314 3.218281 0.68231149 3.1132812 0.80078125 C 2.9917816 0.93787097 3.1891934 1.2798035 3.0585938 1.4082031 C 2.951894 1.5132029 2.7030465 1.3995125 2.5605469 1.4453125 C 2.497347 1.4655875 2.4223367 1.4889387 2.34375 1.515625 C 2.2651633 1.5423113 2.1828042 1.5730891 2.1074219 1.609375 C 2.0320395 1.6456609 1.963743 1.6872544 1.9101562 1.7363281 C 1.8833629 1.760865 1.8596555 1.7861215 1.8417969 1.8144531 C 1.8239382 1.8427848 1.8112875 1.8737251 1.8046875 1.90625 C 1.7980875 1.9387624 1.8034586 1.9708139 1.8164062 2.0019531 C 1.8293539 2.0330923 1.85023 2.0636461 1.8769531 2.09375 C 2.0372921 2.2743733 2.3932905 2.4390753 2.3222656 2.625 C 2.3154531 2.6428625 2.3056358 2.6566136 2.2929688 2.6679688 C 2.2042992 2.7474549 1.9853934 2.6859876 1.8242188 2.734375 C 1.639919 2.7896748 1.5836938 3.2201473 1.6210938 3.4355469 C 1.6420936 3.5565467 1.7418283 3.7394783 1.8613281 3.7675781 C 1.9889279 3.7976781 2.1343471 3.4993533 2.2480469 3.5644531 C 2.4497465 3.6800529 2.2796564 4.1054912 2.2851562 4.3378906 C 2.2926562 4.65289 2.3440562 5.0791725 2.2851562 5.3886719 C 2.2064564 5.8031711 1.6802604 6.2999606 2.1933594 6.8808594 C 1.90846 6.9375592 1.648251 7.3951512 2.15625 7.96875 C 1.7708308 7.8025504 1.0049548 7.7438598 0.921875 8.0058594 C 0.8198952 8.3277588 0.84928816 8.7273752 1.1796875 8.796875 C 1.3853871 8.840075 1.5981879 8.998774 1.8046875 8.484375 C 1.8115875 8.7455744 1.761494 9.0591471 1.9335938 9.1855469 C 2.0781337 9.2916523 2.3393872 9.2943691 2.5566406 9.2285156 C 2.5465047 9.453802 2.5347285 9.679997 2.5136719 9.9042969 C 2.4712551 10.356226 2.4033439 10.805522 2.2929688 11.251953 C 2.2377812 11.475169 2.1718524 11.696502 2.09375 11.917969 C 2.0546988 12.028696 2.0123175 12.139751 1.9667969 12.25 C 1.9124879 12.67521 1.7610549 13.096625 1.6484375 13.515625 C 1.592179 13.725058 1.5446927 13.934642 1.5253906 14.142578 C 1.5205048 14.195212 1.5187175 14.246288 1.5175781 14.298828 C 1.5140321 14.454538 1.5274112 14.608797 1.5664062 14.763672 C 1.6295036 14.789248 1.6945138 14.813413 1.7597656 14.835938 C 1.9555212 14.903512 2.1600842 14.958527 2.3710938 15.003906 C 2.6524399 15.064412 2.94464 15.109068 3.2402344 15.146484 C 3.8314787 15.221554 4.4361649 15.268556 4.9960938 15.363281 L 6.34375 15.435547 C 7.6390559 15.451744 8.93726 15.390366 10.238281 15.199219 C 10.424204 15.171871 10.610793 15.142213 10.796875 15.109375 C 10.91749 15.077127 11.035056 15.04918 11.148438 15.023438 C 11.262401 14.997647 11.374418 14.973877 11.484375 14.951172 C 11.704242 14.905599 11.919027 14.862903 12.142578 14.808594 C 12.17689 14.801016 12.207773 14.7872 12.234375 14.769531 C 12.314181 14.716525 12.359903 14.623273 12.376953 14.525391 C 12.404108 14.412457 12.410159 14.297494 12.402344 14.181641 C 12.394529 14.065787 12.372846 13.94949 12.341797 13.832031 C 12.310748 13.714572 12.271063 13.596264 12.228516 13.478516 C 12.185968 13.360767 12.139967 13.243675 12.097656 13.126953 C 12.055391 13.010252 12.016624 12.893658 11.986328 12.779297 C 11.895313 12.436156 11.88531 12.106977 12.113281 11.808594 C 12.502074 11.502103 13.002536 11.372632 13.445312 11.199219 C 13.546119 11.159738 13.645656 11.118988 13.738281 11.072266 C 14.037962 10.9211 14.284429 10.71822 14.408203 10.375 C 14.452408 9.6591962 14.482751 8.9403715 14.480469 8.2226562 C 14.479739 7.9840337 14.475407 7.7439198 14.466797 7.5058594 C 14.466773 7.5052092 14.466821 7.5045564 14.466797 7.5039062 C 14.466324 7.4908677 14.465342 7.47788 14.464844 7.4648438 C 14.447884 7.0241933 14.414243 6.5851812 14.363281 6.1484375 C 14.360556 6.1250859 14.360257 6.1014618 14.357422 6.078125 C 14.333671 5.8822274 14.303449 5.6869067 14.271484 5.4921875 C 14.245664 5.3351179 14.219126 5.1776609 14.1875 5.0214844 C 14.163851 4.9046751 14.13843 4.7881235 14.111328 4.671875 C 14.092273 4.6211297 14.069072 4.5719497 14.042969 4.5273438 C 14.042503 4.5265519 14.041484 4.5261807 14.041016 4.5253906 C 14.014844 4.4809464 13.985479 4.4392817 13.953125 4.4003906 C 13.952536 4.3996857 13.951763 4.3991407 13.951172 4.3984375 C 13.918316 4.3593577 13.882024 4.3230738 13.84375 4.2890625 C 13.805574 4.2550725 13.765393 4.2228664 13.722656 4.1933594 C 13.722208 4.1930507 13.721151 4.1936676 13.720703 4.1933594 C 13.634293 4.1338406 13.541157 4.08188 13.441406 4.0371094 C 13.341656 3.9923387 13.236951 3.9546543 13.130859 3.9199219 C 13.090241 3.9045148 13.048382 3.8910543 13.007812 3.8808594 C 13.007182 3.880702 13.00649 3.8810155 13.005859 3.8808594 C 12.965335 3.870746 12.925219 3.8630019 12.884766 3.8574219 C 12.880936 3.8568998 12.876876 3.8579067 12.873047 3.8574219 C 12.629831 3.8262618 12.388227 3.8688845 12.150391 3.9160156 C 11.989727 3.9478537 11.830243 3.9812344 11.673828 3.9941406 C 11.556517 4.0038203 11.442333 4.0011774 11.328125 3.9785156 C 11.327519 3.9783954 11.326778 3.9786371 11.326172 3.9785156 C 11.288091 3.9709604 11.25057 3.9617435 11.212891 3.9492188 C 11.212891 3.8731412 11.216568 3.7854635 11.214844 3.6953125 C 11.214608 3.6830486 11.213315 3.6705488 11.212891 3.6582031 C 11.211832 3.6270957 11.209692 3.5956113 11.207031 3.5644531 C 11.206865 3.5625059 11.207205 3.5605398 11.207031 3.5585938 C 11.206856 3.5566547 11.207214 3.554672 11.207031 3.5527344 C 11.203234 3.5120393 11.197294 3.4728853 11.189453 3.4335938 C 11.188794 3.4302887 11.188193 3.4271174 11.1875 3.4238281 C 11.326135 3.3462889 11.403843 3.1761049 11.679688 3.1347656 C 12.047686 3.0794658 12.083312 2.4065002 11.570312 2.5 C 11.787312 2.3328004 12.051562 1.7740742 11.726562 1.421875 C 11.419564 1.0675758 11.007703 0.8860506 10.595703 1.1875 C 10.677703 0.91452054 10.02402 0.31113334 9.5449219 0.7265625 C 9.6211404 0.54884661 9.3745289 0.37438744 9.125 0.36328125 z M 2.9863281 2.8808594 C 2.9895463 2.8842244 2.9927925 2.8873067 2.9960938 2.890625 C 2.9752773 2.8965377 2.9605709 2.8992786 2.9414062 2.9042969 C 2.9558275 2.8960538 2.9709335 2.8882523 2.9863281 2.8808594 z M 12 5.4765625 C 12.04431 5.4777202 12.089043 5.4835075 12.132812 5.4902344 C 12.135362 5.4906262 12.138079 5.4898227 12.140625 5.4902344 C 12.14718 5.4912956 12.153623 5.4929465 12.160156 5.4941406 C 12.187882 5.4992023 12.214948 5.5061331 12.242188 5.5136719 C 12.259249 5.5183961 12.276149 5.5235536 12.292969 5.5292969 C 12.332136 5.5426804 12.370723 5.5569702 12.408203 5.5761719 C 12.453673 5.6140618 12.480463 5.6408171 12.529297 5.703125 C 12.576764 5.8579474 12.621968 6.0297067 12.664062 6.2128906 C 12.706169 6.3960534 12.744275 6.5914552 12.779297 6.7910156 C 12.849341 7.1901364 12.904182 7.6088974 12.935547 8.0019531 C 12.95907 8.2967449 12.969864 8.5779093 12.964844 8.8222656 C 12.959824 9.066622 12.937817 9.2741197 12.898438 9.4277344 C 12.898295 9.4282945 12.898581 9.4291289 12.898438 9.4296875 C 12.872248 9.5311098 12.838316 9.6094056 12.794922 9.65625 C 12.66357 9.7973901 12.542334 9.8979887 12.419922 9.9648438 C 12.29751 10.031699 12.172961 10.064865 12.037109 10.072266 C 11.946542 10.077199 11.850923 10.070685 11.746094 10.054688 L 11.496094 9.9277344 C 11.496094 9.9277344 11.475855 9.8965614 11.453125 9.8359375 C 11.429128 9.5094523 11.3805 9.1653634 11.328125 8.8125 C 11.275829 8.4602984 11.219807 8.0990738 11.181641 7.7382812 C 11.181572 7.7376325 11.181709 7.7369769 11.181641 7.7363281 C 11.162623 7.5562597 11.148191 7.376172 11.140625 7.1972656 C 11.140598 7.1966153 11.140652 7.1959628 11.140625 7.1953125 C 11.136854 7.1055411 11.134652 7.0167964 11.134766 6.9277344 C 11.134883 6.8386623 11.135958 6.7501937 11.140625 6.6621094 C 11.149952 6.4859583 11.169649 6.3111673 11.201172 6.140625 C 11.232699 5.9700725 11.276892 5.8033413 11.335938 5.640625 C 11.37682 5.6189028 11.420433 5.6002822 11.464844 5.5820312 C 11.490367 5.5715422 11.516514 5.5618812 11.542969 5.5527344 C 11.566883 5.544473 11.590695 5.5363421 11.615234 5.5292969 C 11.638461 5.5226178 11.661868 5.5172238 11.685547 5.5117188 C 11.717835 5.5042401 11.750298 5.49728 11.783203 5.4921875 C 11.801453 5.4893492 11.81952 5.4864264 11.837891 5.484375 C 11.891613 5.4784241 11.945937 5.4751499 12 5.4765625 z " />
            </SvgIcon>
            <Typography
              variant="h5"
              noWrap
              component="a"
              href=""
              sx={{
                mr: 2,
                display: { xs: "flex", md: "none" },
                flexGrow: 1,
                fontFamily: "monospace",
                fontWeight: 700,
                letterSpacing: ".3rem",
                color: "inherit",
                textDecoration: "none",
              }}
            >
              Simply Fizzed
            </Typography>
            <Box sx={{ flexGrow: 1, display: { xs: "none", md: "flex" } }}>
              {pages.map((page) => (
                <Button
                  key={page.label}
                  onClick={page.handler}
                  sx={{ my: 2, color: "white", display: "block" }}
                >
                  {page.label}
                </Button>
              ))}
            </Box>

            <Box sx={{ flexGrow: 0 }}>
              <Tooltip title="Open settings">
                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>
                  <Avatar alt={user?.displayName || ""} src={url} />
                </IconButton>
              </Tooltip>
              <Menu
                sx={{ mt: "45px" }}
                id="menu-appbar"
                anchorEl={anchorElUser}
                anchorOrigin={{
                  vertical: "top",
                  horizontal: "right",
                }}
                keepMounted
                transformOrigin={{
                  vertical: "top",
                  horizontal: "right",
                }}
                open={Boolean(anchorElUser)}
                onClose={handleCloseUserMenu}
              >
                {settings.map((setting) => (
                  <MenuItem key={setting.label} onClick={setting.handler}>
                    <Typography textAlign="center">{setting.label}</Typography>
                  </MenuItem>
                ))}
              </Menu>
            </Box>
          </Toolbar>
        </Container>
      </AppBar>

      <Routes>
        <Route
          path="/"
          element={
            <div className="App">
              <header className="App-header">
                <img src={logo} className="App-logo" alt="logo" />
                <Login
                  signedInState={{
                    setIsSignedIn: setIsSignedIn,
                    isSignedIn: isSignedIn,
                  }}
                />
              </header>
            </div>
          }
        />
        <Route path="tos" element={<TermsOfService />} />
        <Route path="privacy" element={<PrivacyPolicy />} />
        <Route path="user" element={<User />} />
        <Route path="soda-spots" element={<SodaSpots />} />
        <Route path="*" element={<Broken />} />
      </Routes>
      <Container sx={{ textAlign: "center" }}>
        Copyright &copy; 2022 Brant Gurganus
      </Container>
      <Container sx={{ textAlign: "center" }}>Version {version}</Container>
      <Snackbar
        action={
          <IconButton
            onClick={() => {
              setMessage("");
            }}
          >
            <CloseIcon />
          </IconButton>
        }
        autoHideDuration={6000}
        open={message !== ""}
        onClose={() => {
          setMessage("");
        }}
        message={message}
      />
    </Box>
  );
}

export default App;
